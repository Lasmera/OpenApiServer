stages:
  - publish
  - docker

linux-x64:
  variables: {PLATFORM: linux-x64}
  stage: publish
  only: [CI]
  tags: [docker-executor]
  image: microsoft/dotnet:sdk
  script: 
    - export VERSION=$(cat .version)
    - cd src/App
    - dotnet publish -o ../../oas -c Release -r $PLATFORM /property:Version=$VERSION
  artifacts:
    name: oas-$PLATFORM
    paths: [oas]

win-x64:
  variables: {PLATFORM: win-x64}
  stage: publish
  only: [CI]
  tags: [docker-executor]
  image: microsoft/dotnet:sdk
  script: 
    - export VERSION=$(cat .version)
    - cd src/App
    - dotnet publish -o ../../oas -c Release -r $PLATFORM /property:Version=$VERSION
  artifacts:
    name: oas-$PLATFORM
    paths: [oas]

osx-x64:
  variables: {PLATFORM: osx-x64}
  stage: publish
  only: [CI]
  tags: [docker-executor]
  image: microsoft/dotnet:sdk
  script: 
    - export VERSION=$(cat .version)
    - cd src/App
    - dotnet publish -o ../../oas -c Release -r $PLATFORM /property:Version=$VERSION
  artifacts:
    name: oas-$PLATFORM
    paths: [oas]



nuget:
  stage: publish
  only: [CI]
  tags: [docker-executor]
  image: microsoft/dotnet:sdk
  script:
    - export VERSION=$(cat .version)
    - cd src/App
    - dotnet pack -o nuget -c Release /property:Version=$VERSION
    - dotnet nuget push nuget/*.nupkg -s http://nuget.itexpert.ru/nuget/ -k password


docker:
    stage: docker
    only: [CI]
    tags: [linux-docker]
    dependencies: [linux-x64]
    retry: 2
    script:
      - docker build -t itexpert/openapi .
      - docker push itexpert/openapi